apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-config
  namespace: ask-maas-observability
data:
  otel-collector-config.yaml: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      
      prometheus:
        config:
          scrape_configs:
            - job_name: 'ask-maas-api'
              kubernetes_sd_configs:
                - role: pod
                  namespaces:
                    names:
                      - ask-maas-api
              relabel_configs:
                - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                  action: keep
                  regex: true
                - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
                  action: replace
                  target_label: __metrics_path__
                  regex: (.+)
                - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
                  action: replace
                  regex: ([^:]+)(?::\d+)?;(\d+)
                  replacement: $1:$2
                  target_label: __address__
      
      jaeger:
        protocols:
          grpc:
            endpoint: 0.0.0.0:14250
          thrift_http:
            endpoint: 0.0.0.0:14268
          thrift_compact:
            endpoint: 0.0.0.0:6831
          thrift_binary:
            endpoint: 0.0.0.0:6832

    processors:
      batch:
        timeout: 1s
        send_batch_size: 1024
      
      memory_limiter:
        check_interval: 1s
        limit_mib: 512
        spike_limit_mib: 128
      
      resource:
        attributes:
          - key: cluster.name
            value: ask-maas
            action: insert
          - key: environment
            value: production
            action: insert
      
      attributes:
        actions:
          - key: http.user_agent
            action: delete
          - key: http.request.body
            action: delete
      
      span:
        name:
          from_attributes: ["http.method", "http.route"]
          separator: " "
      
      tail_sampling:
        decision_wait: 10s
        num_traces: 100
        expected_new_traces_per_sec: 10
        policies:
          [
            {
              name: errors-policy,
              type: status_code,
              status_code: {status_codes: [ERROR]}
            },
            {
              name: latency-policy,
              type: latency,
              latency: {threshold_ms: 1000}
            },
            {
              name: probabilistic-policy,
              type: probabilistic,
              probabilistic: {sampling_percentage: 10}
            }
          ]

    exporters:
      prometheus:
        endpoint: "0.0.0.0:8889"
        namespace: ask_maas
        const_labels:
          service: ask-maas
      
      jaeger:
        endpoint: jaeger-collector.ask-maas-observability.svc.cluster.local:14250
        tls:
          insecure: true
      
      logging:
        loglevel: info
      
      otlp/tempo:
        endpoint: tempo.ask-maas-observability.svc.cluster.local:4317
        tls:
          insecure: true

    extensions:
      health_check:
        endpoint: 0.0.0.0:13133
      pprof:
        endpoint: 0.0.0.0:1777
      zpages:
        endpoint: 0.0.0.0:55679

    service:
      extensions: [health_check, pprof, zpages]
      pipelines:
        traces:
          receivers: [otlp, jaeger]
          processors: [memory_limiter, batch, resource, attributes, span, tail_sampling]
          exporters: [jaeger, logging]
        
        metrics:
          receivers: [otlp, prometheus]
          processors: [memory_limiter, batch, resource]
          exporters: [prometheus, logging]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-collector
  namespace: ask-maas-observability
  labels:
    app: otel-collector
spec:
  replicas: 2
  selector:
    matchLabels:
      app: otel-collector
  template:
    metadata:
      labels:
        app: otel-collector
    spec:
      serviceAccountName: otel-collector-sa
      containers:
      - name: otel-collector
        image: otel/opentelemetry-collector-contrib:0.88.0
        command:
          - "/otelcol-contrib"
          - "--config=/conf/otel-collector-config.yaml"
        ports:
        - containerPort: 4317  # OTLP gRPC
          name: otlp-grpc
          protocol: TCP
        - containerPort: 4318  # OTLP HTTP
          name: otlp-http
          protocol: TCP
        - containerPort: 14250 # Jaeger gRPC
          name: jaeger-grpc
          protocol: TCP
        - containerPort: 14268 # Jaeger HTTP
          name: jaeger-http
          protocol: TCP
        - containerPort: 6831  # Jaeger Thrift Compact
          name: thrift-compact
          protocol: UDP
        - containerPort: 6832  # Jaeger Thrift Binary
          name: thrift-binary
          protocol: UDP
        - containerPort: 8889  # Prometheus metrics
          name: prometheus
          protocol: TCP
        - containerPort: 13133 # Health check
          name: health-check
          protocol: TCP
        resources:
          requests:
            cpu: "500m"
            memory: "512Mi"
          limits:
            cpu: "2"
            memory: "2Gi"
        volumeMounts:
        - name: config
          mountPath: /conf
        livenessProbe:
          httpGet:
            path: /
            port: 13133
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /
            port: 13133
          initialDelaySeconds: 10
          periodSeconds: 10
      volumes:
      - name: config
        configMap:
          name: otel-collector-config
---
apiVersion: v1
kind: Service
metadata:
  name: otel-collector
  namespace: ask-maas-observability
  labels:
    app: otel-collector
spec:
  type: ClusterIP
  selector:
    app: otel-collector
  ports:
  - name: otlp-grpc
    port: 4317
    targetPort: 4317
    protocol: TCP
  - name: otlp-http
    port: 4318
    targetPort: 4318
    protocol: TCP
  - name: jaeger-grpc
    port: 14250
    targetPort: 14250
    protocol: TCP
  - name: jaeger-http
    port: 14268
    targetPort: 14268
    protocol: TCP
  - name: thrift-compact
    port: 6831
    targetPort: 6831
    protocol: UDP
  - name: thrift-binary
    port: 6832
    targetPort: 6832
    protocol: UDP
  - name: prometheus
    port: 8889
    targetPort: 8889
    protocol: TCP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: otel-collector-sa
  namespace: ask-maas-observability
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: otel-collector-role
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions"]
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: otel-collector-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: otel-collector-role
subjects:
- kind: ServiceAccount
  name: otel-collector-sa
  namespace: ask-maas-observability
